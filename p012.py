"""The sequence of triangle numbers is generated by adding the natural numbers. So the
7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

"""

from itertools import groupby
from operator import mul
from functools import reduce

def product(a):
    return reduce(mul, a)

def numDivisors(n):
    if n == 1: return 1
    else: return product(sum(1 for p in primes) + 1
                         for _, primes in groupby(primeFactors(n)))
    
def primeFactors(n):
    p = 2
    while n != 1:
        while n%p == 0:
            yield p
            n = n/p
        p += 1

def triangleNumbers():
    n = ans = 1
    while True:
        yield ans
        n += 1
        ans += n

ans = next(n for n in triangleNumbers() if numDivisors(n) > 500)
           
print(ans)
